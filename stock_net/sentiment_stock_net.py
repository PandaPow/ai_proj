import numpy
import datetime

# from keras.models import Sequential
# from keras.layers import Dense

# data: one stock
# this is what the net should be outputting: 1 for increase, 0 for same/decrease
dataset = numpy.genfromtxt('aapl.us.txt', delimiter=',', dtype='str',skip_header=1)
stock_date = dataset[:,0]
stock_size = len(stock_date)
stock_open = dataset[:,1].astype(numpy.float)
stock_close = dataset[:,4].astype(numpy.float)
stock_direction = numpy.zeros(stock_size, dtype='int')
stock_size = len(stock_date)

for i, item in enumerate(stock_direction):
    if (stock_close[i] - stock_open[i] > 0):
        stock_direction[i] = 1
    else:
        stock_direction[i] = 0

# data: generated by sentiment net
inputdata = numpy.genfromtxt('fake_net2input.txt', delimiter=',', dtype='str',skip_header=1)
net1_date = inputdata[:,0]
net1_name = inputdata[:,1]
net1_sentiment = inputdata[:,2].astype(numpy.int)
net1_size = len(net1_date)

# get the stock data corresponding to net1's data
net1_direction = numpy.zeros(net1_size, dtype='int')
for i, day in enumerate(net1_date):
    if(day in stock_date):
        j = numpy.where(stock_date == day)
        net1_direction[i] = stock_direction[j]
    else:
        print('Either no stock data for that date, or it was a weekend')
        net1_date[i]=''
        net1_name[i]=''
        net1_sentiment[i]=-1
        net1_direction[i]=-1

    


# FIX THIS ON A COMPUTER THAT HAS KERAS
# net = Sequential()
# net.add(Dense(units=64, input_dim=dims, activation='relu'))
# net.add(Dense(units=32, activation='relu'))
# net.add(Dense(units=1, activation='softmax'))
# net.compile(loss='binary_crossentropy', optimizer='adam', metrics=['accuracy'])
# net.fit(xTrain, yTrain, epochs=1, batch_size=16, validation_data=(xTest, yTest)
